<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Manage Chest Data</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #121212;
            color: #e0e0e0;
            overflow-x: hidden;
        }
        .container {
            width: 90%;
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }
        h1 {
            text-align: center;
            color: #f5a623;
            margin-bottom: 20px;
        }
        .section {
            background: #1f1f1f;
            padding: 20px;
            margin-bottom: 20px;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0,0,0,0.5);
        }
        .section h2 {
            margin-top: 0;
            color: #f5a623;
        }
        .section button {
            background-color: #f5a623;
            color: #121212;
            border: none;
            padding: 10px 20px;
            border-radius: 4px;
            cursor: pointer;
            margin-bottom: 10px;
        }
        .section button:hover {
            background-color: #e59400;
        }
        .chests-list {
            background: #1f1f1f;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0,0,0,0.5);
        }
        .chests-list h2 {
            color: #f5a623;
        }
        .chests-container {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
            justify-content: center;
        }
        .chest-card {
            background: #2a2a2a;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0,0,0,0.5);
            width: 100%;
            max-width: 300px;
            text-align: center;
        }
        .chest-card h3 {
            color: #f5a623;
            margin: 0;
        }
        .chest-card p {
            margin: 10px 0;
            color: #e0e0e0;
        }
        .chest-card button {
            background-color: #dc3545;
            color: #fff;
            border: none;
            padding: 10px;
            border-radius: 4px;
            cursor: pointer;
            margin: 5px;
            width: 45%;
        }
        .chest-card button:hover {
            background-color: #c82333;
        }
        /* Modal Styles */
        .modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgba(0, 0, 0, 0.8);
            align-items: center;
            justify-content: center;
        }
        .modal-content {
            background: #1f1f1f;
            padding: 20px;
            border-radius: 8px;
            width: 90%;
            max-width: 500px;
            margin: auto;
            box-shadow: 0 4px 8px rgba(0,0,0,0.5);
        }
        .modal-content h2 {
            color: #f5a623;
            margin-top: 0;
        }
        .modal-content form {
            display: flex;
            flex-direction: column;
        }
        .modal-content form input, .modal-content form button {
            padding: 10px;
            margin-bottom: 10px;
            border: 1px solid #333;
            border-radius: 4px;
            background-color: #2a2a2a;
            color: #e0e0e0;
        }
        .modal-content form button {
            background-color: #f5a623;
            color: #121212;
            border: none;
            cursor: pointer;
        }
        .modal-content form button:hover {
            background-color: #e59400;
        }
        .close {
            position: absolute;
            top: 10px;
            right: 10px;
            font-size: 24px;
            cursor: pointer;
            color: #e0e0e0;
        }
        @media (max-width: 600px) {
            .container {
                width: 100%;
                padding: 10px;
            }
            .chest-card {
                width: 100%;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Manage Chest Data</h1>

        <!-- Button to open Add Chest modal -->
        <div class="section">
            <button id="openAddChestModal">Add Chest</button>
        </div>

        <!-- Section to Display All Chests -->
        <div class="chests-list">
            <h2>All Chest Data</h2>
            <div id="chestsContainer" class="chests-container">Loading...</div>
        </div>
    </div>

    <!-- Add Chest Modal -->
    <div id="addChestModal" class="modal">
        <div class="modal-content">
            <span class="close" id="closeAddChestModal">&times;</span>
            <h2>Add Chest Data</h2>
            <form id="saveChestForm">
                <label for="saveChestName">Chest Name:</label>
                <input type="text" id="saveChestName" name="chestName" required>

                <label for="saveX">X Coordinate:</label>
                <input type="number" id="saveX" name="x" required>

                <label for="saveY">Y Coordinate:</label>
                <input type="number" id="saveY" name="y" required>

                <label for="saveZ">Z Coordinate:</label>
                <input type="number" id="saveZ" name="z" required>

                <label for="saveItem">Item:</label>
                <input type="text" id="saveItem" name="item" required>

                <button type="submit">Save Chest Data</button>
            </form>
        </div>
    </div>

    <!-- Edit Chest Modal -->
    <div id="editChestModal" class="modal">
        <div class="modal-content">
            <span class="close" id="closeEditChestModal">&times;</span>
            <h2>Edit Chest Data</h2>
            <form id="editChestForm">
                <label for="editChestName">Chest Name:</label>
                <input type="text" id="editChestName" name="chestName" required>

                <label for="editX">X Coordinate:</label>
                <input type="number" id="editX" name="x" required>

                <label for="editY">Y Coordinate:</label>
                <input type="number" id="editY" name="y" required>

                <label for="editZ">Z Coordinate:</label>
                <input type="number" id="editZ" name="z" required>

                <label for="editItem">Item:</label>
                <input type="text" id="editItem" name="item" required>

                <button type="submit">Edit Chest Data</button>
            </form>
        </div>
    </div>

    <script>
        // Function to fetch and display all chest data
        const fetchChests = async () => {
            try {
                const response = await fetch('/chest/all-chests');
                const chests = await response.json();
                const chestsContainer = document.getElementById('chestsContainer');
                chestsContainer.innerHTML = '';  // Clear the container

                for (const chestName in chests) {
                    const chest = chests[chestName];
                    const chestCard = document.createElement('div');
                    chestCard.classList.add('chest-card');
                    chestCard.innerHTML = `
                        <h3>${chestName}</h3>
                        <p>X: ${chest.x}</p>
                        <p>Y: ${chest.y}</p>
                        <p>Z: ${chest.z}</p>
                        <p>Item: ${chest.item}</p>
                        <button onclick="deleteChest('${chestName}')">Delete</button>
                        <button onclick="populateEditForm('${chestName}', ${chest.x}, ${chest.y}, ${chest.z}, '${chest.item}')">Edit</button>
                    `;
                    chestsContainer.appendChild(chestCard);
                }
            } catch (error) {
                console.error('Error fetching chests:', error);
            }
        };

        // Function to delete a chest
        const deleteChest = async (chestName) => {
            try {
                const response = await fetch('/chest/delete-chest', {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ chestName })
                });
                const result = await response.text();
                alert(result);
                fetchChests();  // Refresh the chest list
            } catch (error) {
                console.error('Error deleting chest:', error);
            }
        };

        // Function to populate the edit form with existing chest data
        const populateEditForm = (name, x, y, z, item) => {
            document.getElementById('editChestName').value = name;
            document.getElementById('editX').value = x;
            document.getElementById('editY').value = y;
            document.getElementById('editZ').value = z;
            document.getElementById('editItem').value = item;
            openModal('editChestModal');
        };

        // Function to open a modal
        const openModal = (modalId) => {
            document.getElementById(modalId).style.display = 'flex';
        };

        // Function to close a modal
        const closeModal = (modalId) => {
            document.getElementById(modalId).style.display = 'none';
        };

        // Handle Save Chest Data form submission
        const saveChestForm = document.getElementById('saveChestForm');
        saveChestForm.addEventListener('submit', (e) => {
            e.preventDefault();
            handleSubmit(saveChestForm, 'POST', '/chest/save-chest');
        });

        // Handle Edit Chest Data form submission
        const editChestForm = document.getElementById('editChestForm');
        editChestForm.addEventListener('submit', (e) => {
            e.preventDefault();
            handleSubmit(editChestForm, 'PUT', '/chest/edit-chest');
        });

        // Function to handle form submission
        const handleSubmit = async (form, method, url) => {
            const formData = new FormData(form);
            const data = Object.fromEntries(formData.entries());

            try {
                const response = await fetch(url, {
                    method: method,
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(data)
                });
                const result = await response.text();
                alert(result);
                closeModal(method === 'POST' ? 'addChestModal' : 'editChestModal');
                fetchChests();  // Refresh the chest list after save or edit
            } catch (error) {
                alert('Error processing request');
            }
        };

        // Event listeners for opening and closing modals
        document.getElementById('openAddChestModal').addEventListener('click', () => openModal('addChestModal'));
        document.getElementById('closeAddChestModal').addEventListener('click', () => closeModal('addChestModal'));
        document.getElementById('closeEditChestModal').addEventListener('click', () => closeModal('editChestModal'));

        // Load all chests on page load
        fetchChests();
    </script>
</body>
</html>
