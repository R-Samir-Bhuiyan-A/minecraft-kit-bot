<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Order Kits</title>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: #121212;
            color: #e0e0e0;
            margin: 0;
            padding: 0;
        }
        .container {
            width: 90%;
            margin: auto;
            padding: 20px;
        }
        h1 {
            text-align: center;
            color: #6200ea;
            margin-bottom: 20px;
            font-size: 2em;
        }
        .kit-card {
            background-color: #1e1e1e;
            border-radius: 10px;
            padding: 20px;
            margin: 10px 0;
            box-shadow: 0 4px 8px rgba(0,0,0,0.5);
            transition: background-color 0.3s ease;
        }
        .kit-card:hover {
            background-color: #2a2a2a;
        }
        .kit-card h2 {
            margin: 0;
            color: #6200ea;
        }
        .kit-card p {
            margin: 5px 0;
            color: #bbbbbb;
        }
        .kit-card form {
            display: flex;
            flex-direction: column;
        }
        .kit-card input, .kit-card button {
            margin-bottom: 10px;
            padding: 10px;
            border: 1px solid #333;
            border-radius: 8px;
            background-color: #333333;
            color: #ffffff;
            font-size: 1em;
            transition: border-color 0.3s, background-color 0.3s;
        }
        .kit-card input:focus {
            border-color: #6200ea;
        }
        .kit-card button {
            background-color: #6200ea;
            border: none;
            cursor: pointer;
            transition: background-color 0.3s ease, transform 0.3s;
        }
        .kit-card button:hover {
            background-color: #5300d6;
            transform: translateY(-2px);
        }
        .toggle-coordinates {
            display: inline-block;
            margin-top: 10px;
            cursor: pointer;
            color: #6200ea;
            text-decoration: underline;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Order Kits</h1>
        <div id="kitsContainer"></div>
    </div>

    <script>
        const fetchKits = async () => {
            try {
                const response = await fetch('/api/chests');
                const chests = await response.json();
                const container = document.getElementById('kitsContainer');
                container.innerHTML = '';

                Object.keys(chests).forEach(chestName => {
                    const chest = chests[chestName];
                    const card = document.createElement('div');
                    card.classList.add('kit-card');
                    card.innerHTML = `
                        <h2>${chestName}</h2>
                        <p>Item: ${chest.item}</p>
                        <form data-chest="${chestName}">
                            <input type="number" name="amount" placeholder="Amount" required>
                            <input type="text" name="player" placeholder="Player Name" required>
                            <button type="submit">Order Kit</button>
                        </form>
                    `;
                    container.appendChild(card);
                });

                document.querySelectorAll('form').forEach(form => {
                    form.addEventListener('submit', async (e) => {
                        e.preventDefault();
                        const chestName = form.getAttribute('data-chest');
                        const amount = form.amount.value;
                        const player = form.player.value;

                        try {
                            const response = await fetch('/api/order', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json'
                                },
                                body: JSON.stringify({ chestName, amount, player })
                            });
                            const result = await response.text();
                            alert(result);
                        } catch (error) {
                            alert('Error ordering kit');
                        }
                    });
                });

                // Toggle coordinates visibility
                document.querySelectorAll('.toggle-coordinates').forEach(button => {
                    button.addEventListener('click', () => {
                        const coordinatesDiv = button.nextElementSibling;
                        const isVisible = coordinatesDiv.style.display === 'block';
                        coordinatesDiv.style.display = isVisible ? 'none' : 'block';
                        button.textContent = isVisible ? 'Show Coordinates' : 'Hide Coordinates';
                    });
                });

            } catch (error) {
                console.error('Error fetching kits:', error);
            }
        };

        fetchKits();
    </script>
</body>
</html>
